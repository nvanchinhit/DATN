'use client';

import { useState } from 'react';
import { Eye, Pencil, Trash2, PlusCircle, Search, X } from 'lucide-react';

// 1. C·∫≠p nh·∫≠t Interface: status gi·ªù l√† 'ƒêang ho·∫°t ƒë·ªông' | 'Ch·ªù x√©t duy·ªát'
interface Doctor {
  id: number;
  name: string;
  phone: string;
  email: string;
  img: string;
  specialization: string;
  status: 'ƒêang ho·∫°t ƒë·ªông' | 'Ch·ªù x√©t duy·ªát';
  certificate: string;
  degree: string;
  introduction: string;
}

// 2. C·∫≠p nh·∫≠t D·ªØ li·ªáu M·∫´u v·ªõi tr·∫°ng th√°i m·ªõi
const initialDoctors: Doctor[] = [
  {
    id: 201,
    name: 'GS.TS. Tr·∫ßn VƒÉn An',
    phone: '0905123456',
    email: 'an.tv@clinic.vn',
    img: 'https://cdn.bookingcare.vn/fr/w200/2023/11/27/111857-bsckii-nguyen-thi-nu.jpg',
    specialization: 'Tim m·∫°ch',
    status: 'ƒêang ho·∫°t ƒë·ªông',
    certificate: 'https://i.imgur.com/r3eYFRC.jpeg',
    degree: 'https://i.imgur.com/T0azHTQ.jpeg',
    introduction: 'H∆°n 20 nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c tim m·∫°ch can thi·ªáp, t·ª´ng tu nghi·ªáp t·∫°i Ph√°p v√† Hoa K·ª≥. L√† chuy√™n gia h√†ng ƒë·∫ßu v·ªÅ ƒë·∫∑t stent v√† c√°c th·ªß thu·∫≠t tim m·∫°ch ph·ª©c t·∫°p.',
  },
  {
    id: 202,
    name: 'BSCKII. Nguy·ªÖn Th·ªã Lan',
    phone: '0912987654',
    email: 'lan.nt@clinic.vn',
    img: 'https://cdn.bookingcare.vn/fr/w200/2024/01/10/144612-bs-hoang-cuong.jpg',
    specialization: 'Da li·ªÖu',
    status: 'ƒêang ho·∫°t ƒë·ªông',
    certificate: 'https://i.imgur.com/r3eYFRC.jpeg',
    degree: 'https://i.imgur.com/T0azHTQ.jpeg',
    introduction: 'Chuy√™n gia v·ªÅ c√°c b·ªánh da li·ªÖu th·∫©m m·ªπ, ·ª©ng d·ª•ng c√¥ng ngh·ªá laser ti√™n ti·∫øn trong ƒëi·ªÅu tr·ªã n√°m, t√†n nhang v√† tr·∫ª h√≥a da. R·∫•t m√°t tay v√† ƒë∆∞·ª£c nhi·ªÅu b·ªánh nh√¢n tin t∆∞·ªüng.',
  },
  {
    id: 203,
    name: 'ThS.BS. L√™ Ho√†ng Minh',
    phone: '0988112233',
    email: 'minh.lh@clinic.vn',
    img: 'https://cdn.bookingcare.vn/fr/w200/2023/06/06/171556-bs-ma-thanh-xuan.jpg',
    specialization: 'Nhi khoa',
    status: 'ƒêang ho·∫°t ƒë·ªông',
    certificate: 'https://i.imgur.com/r3eYFRC.jpeg',
    degree: 'https://i.imgur.com/T0azHTQ.jpeg',
    introduction: 'T·∫≠n t√¢m v·ªõi s·ª©c kh·ªèe tr·∫ª em, ƒë·∫∑c bi·ªát c√≥ chuy√™n m√¥n s√¢u v·ªÅ c√°c v·∫•n ƒë·ªÅ dinh d∆∞·ª°ng, ti√™u h√≥a v√† ti√™m ch·ªßng m·ªü r·ªông. Lu√¥n nh·∫π nh√†ng v√† th·∫•u hi·ªÉu t√¢m l√Ω tr·∫ª nh·ªè.',
  },
  {
    id: 204,
    name: 'BS. Ph·∫°m Thu H√†',
    phone: '0934555888',
    email: 'ha.pt@clinic.vn',
    img: 'https://cdn.bookingcare.vn/fr/w200/2023/12/11/110542-bsckii-tran-thi-huyen-trang.jpg',
    specialization: 'S·∫£n ph·ª• khoa',
    status: 'Ch·ªù x√©t duy·ªát', // C·∫≠p nh·∫≠t tr·∫°ng th√°i
    certificate: 'https://i.imgur.com/r3eYFRC.jpeg',
    degree: 'https://i.imgur.com/T0azHTQ.jpeg',
    introduction: 'H·ªì s∆° m·ªõi, ƒëang ch·ªù h·ªôi ƒë·ªìng y khoa ph√™ duy·ªát ch·ª©ng ch·ªâ v√† b·∫±ng c·∫•p.',
  },
];

const specializations = [...new Set(initialDoctors.map(d => d.specialization))];
const statuses = [...new Set(initialDoctors.map(d => d.status))];

export default function DoctorsPage() {
  const [doctors, setDoctors] = useState<Doctor[]>(initialDoctors);
  const [searchTerm, setSearchTerm] = useState('');
  const [filterSpecialization, setFilterSpecialization] = useState('all');
  const [filterStatus, setFilterStatus] = useState('all');
  const [selectedDoctor, setSelectedDoctor] = useState<Doctor | null>(null);

  const displayedDoctors = doctors
    .filter(doc => (filterStatus === 'all' ? true : doc.status === filterStatus))
    .filter(doc => (filterSpecialization === 'all' ? true : doc.specialization === filterSpecialization))
    .filter(doc => {
      if (!searchTerm) return true;
      const term = searchTerm.toLowerCase();
      return (
        doc.name.toLowerCase().includes(term) ||
        doc.phone.includes(term) ||
        `BS${doc.id}`.toLowerCase().includes(term)
      );
    });
  
  const handleViewDetails = (doctor: Doctor) => setSelectedDoctor(doctor);
  const handleCloseModal = () => setSelectedDoctor(null);

  return (
    <div className="p-6 bg-gray-50 min-h-screen">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-bold text-gray-800">üë®‚Äç‚öïÔ∏è Qu·∫£n l√Ω B√°c sƒ©</h1>
        <button className="flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded-lg shadow-sm hover:bg-blue-700 transition">
          <PlusCircle size={20} /> Th√™m B√°c sƒ©
        </button>
      </div>

      <div className="mb-6 p-4 bg-white rounded-xl shadow-md border border-gray-200">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div className="relative">
            <Search className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400" size={20}/>
            {/* 3. S·ª¨A L·ªñI B√ÅO ƒê·ªé: Th√™m type cho event c·ªßa input */}
            <input 
              type="text"
              placeholder="T√¨m theo t√™n, SƒêT, m√£ BS..."
              value={searchTerm}
              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchTerm(e.target.value)}
              className="w-full h-10 pl-10 pr-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition"
            />
          </div>
          <select value={filterSpecialization} onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setFilterSpecialization(e.target.value)} className="w-full h-10 px-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition bg-white"><option value="all">T·∫•t c·∫£ chuy√™n khoa</option>{specializations.map(spec => (<option key={spec} value={spec}>{spec}</option>))}</select>
          <select value={filterStatus} onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setFilterStatus(e.target.value)} className="w-full h-10 px-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition bg-white"><option value="all">T·∫•t c·∫£ tr·∫°ng th√°i</option>{statuses.map(status => (<option key={status} value={status}>{status}</option>))}</select>
        </div>
      </div>

      <div className="overflow-x-auto bg-white shadow-md rounded-xl">
        <table className="min-w-full text-sm text-left">
          <thead className="bg-gray-100 text-gray-600 uppercase tracking-wide">
            <tr>
              <th className="px-6 py-4 border-b">B√°c sƒ©</th>
              <th className="px-6 py-4 border-b">Chuy√™n khoa</th>
              <th className="px-6 py-4 border-b">Tr·∫°ng th√°i</th>
              <th className="px-6 py-4 border-b text-center">B·∫±ng c·∫•p</th>
              <th className="px-6 py-4 border-b text-center">Ch·ª©ng ch·ªâ</th>
              <th className="px-6 py-4 border-b text-center">H√†nh ƒë·ªông</th>
            </tr>
          </thead>
          <tbody>
            {displayedDoctors.length > 0 ? (
              displayedDoctors.map((doc) => (
                <tr key={doc.id} className="border-b hover:bg-gray-50 transition">
                  <td className="px-6 py-4 flex items-center gap-4">
                    <img src={doc.img || '/default-avatar.jpg'} alt={doc.name} className="w-11 h-11 rounded-full object-cover border-2 border-white shadow-md"/>
                    <div><p className="text-gray-900 font-semibold">{doc.name}</p><p className="text-gray-500 text-xs">{doc.email}</p></div>
                  </td>
                  <td className="px-6 py-4 text-gray-700">{doc.specialization}</td>
                  <td className="px-6 py-4">
                    {/* 4. C·∫≠p nh·∫≠t logic hi·ªÉn th·ªã m√†u cho tr·∫°ng th√°i m·ªõi */}
                    <span className={`px-2.5 py-1 text-xs font-semibold rounded-full ${
                      doc.status === 'ƒêang ho·∫°t ƒë·ªông' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'
                    }`}>
                      {doc.status}
                    </span>
                  </td>
                  <td className="px-6 py-4 text-center"><a href={doc.degree} target="_blank" rel="noopener noreferrer" title="Xem ·∫£nh ƒë·∫ßy ƒë·ªß"><img src={doc.degree} alt="B·∫±ng c·∫•p" className="w-16 h-auto mx-auto rounded-sm border hover:scale-125 hover:shadow-lg transition-transform duration-200"/></a></td>
                  <td className="px-6 py-4 text-center"><a href={doc.certificate} target="_blank" rel="noopener noreferrer" title="Xem ·∫£nh ƒë·∫ßy ƒë·ªß"><img src={doc.certificate} alt="Ch·ª©ng ch·ªâ" className="w-16 h-auto mx-auto rounded-sm border hover:scale-125 hover:shadow-lg transition-transform duration-200"/></a></td>
                  <td className="px-6 py-4 flex justify-center items-center gap-4">
                    <button onClick={() => handleViewDetails(doc)} className="text-blue-600 hover:text-blue-800 transition" title="Xem h·ªì s∆°"><Eye size={18} /></button>
                    <button className="text-yellow-600 hover:text-yellow-800 transition" title="Ch·ªânh s·ª≠a"><Pencil size={18} /></button>
                    <button className="text-red-600 hover:text-red-800 transition" title="Xo√° b√°c sƒ©"><Trash2 size={18} /></button>
                  </td>
                </tr>
              ))
            ) : (
              <tr><td colSpan={6} className="text-center py-10 text-gray-500">Kh√¥ng t√¨m th·∫•y b√°c sƒ© n√†o ph√π h·ª£p.</td></tr>
            )}
          </tbody>
        </table>
      </div>

      {selectedDoctor && (
        <div className="fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 p-4" onClick={handleCloseModal}>
          <div className="bg-white rounded-2xl shadow-2xl w-full max-w-3xl relative max-h-[90vh] overflow-y-auto" onClick={(e) => e.stopPropagation()}>
            <div className="p-6 border-b flex justify-between items-center"><h2 className="text-2xl font-bold text-gray-800">H·ªì s∆° B√°c sƒ©</h2><button onClick={handleCloseModal} className="text-gray-400 hover:text-gray-600"><X size={24} /></button></div>
            <div className="p-6 grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="md:col-span-1 flex flex-col items-center text-center">
                <img src={selectedDoctor.img} alt={selectedDoctor.name} className="w-32 h-32 rounded-full object-cover border-4 border-blue-100 shadow-lg mb-4"/>
                <h3 className="text-xl font-bold text-gray-900">{selectedDoctor.name}</h3>
                <p className="text-blue-600 font-semibold">{selectedDoctor.specialization}</p>
                <span className={`mt-2 px-3 py-1 text-xs font-semibold rounded-full ${ 
                  selectedDoctor.status === 'ƒêang ho·∫°t ƒë·ªông' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'
                }`}>{selectedDoctor.status}</span>
              </div>
              <div className="md:col-span-2 space-y-4">
                <div><h4 className="font-semibold text-gray-700 border-b pb-1 mb-2">Th√¥ng tin li√™n h·ªá</h4><p className="text-gray-600"><strong>ƒêi·ªán tho·∫°i:</strong> {selectedDoctor.phone}</p><p className="text-gray-600"><strong>Email:</strong> {selectedDoctor.email}</p></div>
                <div>
                  <h4 className="font-semibold text-gray-700 border-b pb-1 mb-2">Ch·ª©ng ch·ªâ & B·∫±ng c·∫•p</h4>
                  <div className="flex gap-4 mt-2">
                    <div className="text-center"><p className="text-xs font-bold text-gray-500 mb-1">B·∫∞NG C·∫§P</p><a href={selectedDoctor.degree} target="_blank" rel="noopener noreferrer"><img src={selectedDoctor.degree} alt="B·∫±ng c·∫•p" className="w-40 h-auto rounded-md border shadow-md hover:shadow-xl transition-shadow"/></a></div>
                    <div className="text-center"><p className="text-xs font-bold text-gray-500 mb-1">CH·ª®NG CH·ªà</p><a href={selectedDoctor.certificate} target="_blank" rel="noopener noreferrer"><img src={selectedDoctor.certificate} alt="Ch·ª©ng ch·ªâ" className="w-40 h-auto rounded-md border shadow-md hover:shadow-xl transition-shadow"/></a></div>
                  </div>
                </div>
                <div><h4 className="font-semibold text-gray-700 border-b pb-1 mb-2">Gi·ªõi thi·ªáu</h4><p className="text-gray-600 text-justify leading-relaxed">{selectedDoctor.introduction}</p></div>
              </div>
            </div>
            <div className="p-4 bg-gray-50 border-t text-right"><button onClick={handleCloseModal} className="bg-gray-200 text-gray-800 px-4 py-2 rounded-lg hover:bg-gray-300 transition">ƒê√≥ng</button></div>
          </div>
        </div>
      )}
    </div>
  );
}